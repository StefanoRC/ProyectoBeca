---
import MainLayout from "../../layouts/mainLayout.astro";
const {
  title,
  buttonText,
  windowTitle,
  successMessage = "Usuario registrado con exito",
  errorMessage = "El usuario o correo ya existen",
  storageKey = "registerData",
  validateDuplicates = true,
} = Astro.props;
---

<MainLayout title={windowTitle}>
  <form
    id="register"
    title="Registro de Usuario"
    data-success-message={successMessage}
    data-error-message={errorMessage}
    data-storage-key={storageKey}
    data-validate-duplicate={validateDuplicates}
  >
    <h1>{title}</h1>
    <slot />
    <button type="submit">{buttonText}</button>
  </form>

  <script>
    try {
      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("register");
        const successMessage = form.dataset.successMessage;
        const errorMessage = form.dataset.errorMessage;
        const storageKey = form.dataset.storageKey;
        const validationDuplicates = form.dataset.validateDuplicate === "true";
        form.addEventListener("submit", (e) => {
          e.preventDefault();
          const inputs = form.querySelectorAll("input");
          const textAreas = form.querySelectorAll("textarea");
          const emailInput = form.querySelector('input[type="email"]');
          let valid = true;
          let errorMsg = "";

          inputs.forEach((input) => {
            if (!input.value.trim()) {
              valid = false;
              errorMsg = "Por favor, completa todos los campos.";
              input.classList.add("input-error");
            } else {
              input.classList.remove("input-error");
            }
          });

          textAreas.forEach((textarea) => {
            if (!textarea.value.trim()) {
              valid = false;
              errorMsg = "Por favor, completa todos los campos.";
              textarea.classList.add("input-error");
            } else {
              textarea.classList.remove("input-error");
            }
          });

          if (emailInput && !/^[^@]+@[^@]+\.[^@]+$/.test(emailInput.value)) {
            valid = false;
            errorMsg = "Por favor, ingresa un email vÃ¡lido.";
            emailInput.classList.add("input-error");
          }

          if (!valid) {
            alert(errorMsg);
            return;
          }

          const data = {};
          inputs.forEach((input) => {
            data[input.name] = input.value;
          });

          textAreas.forEach((textAreas) => {
            data[textAreas.name] = textAreas.value;
          });

          let users = JSON.parse(localStorage.getItem(storageKey));
          if (!Array.isArray(users)) {
            users = [];
          }

          if (
            validationDuplicates &&
            users.some(
              (user) => user.email == data.email || user.user == data.user
            )
          ) {
            alert(errorMessage);
            return;
          }

          users.push(data);
          localStorage.setItem(storageKey, JSON.stringify(users));
          alert(successMessage);
          form.reset();
        });
      });
    } catch (error) {
      console.error("ocurrio un error", error);
      alert("Ocurrio un error, por favor intente nuevamente");
    }
  </script>

  <style>
    #register {
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      justify-content: center;
      max-width: 1000px;
      margin: 1rem auto;
      padding: 0.5rem 1rem;
      background: var(--bg-color);
      border-radius: 8px;
      gap: 1em;
    }

    #register button[type="submit"] {
      display: block;
      margin: 3em auto 0 auto;
      background-color: var(--bg-color);
      color: var(--primary);
    }
  </style>
</MainLayout>
